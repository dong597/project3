apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: zookeeper-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: zookeeper-pv
  namespace: kafka-elk
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: zookeeper-storage
  local:
    path: /mnt/disks/zookeeper
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - test

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zookeeper-pvc
  namespace: kafka-elk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: zookeeper-storage

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-deployment
  namespace: kafka-elk
  labels:
    app: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:latest
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
            - name: ZOOKEEPER_INIT_LIMIT
              value: "10"
            - name: ZOOKEEPER_SYNC_LIMIT
              value: "5"
          volumeMounts:
            - name: zookeeper-storage
              mountPath: /var/lib/zookeeper/data
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      volumes:
        - name: zookeeper-storage
          persistentVolumeClaim:
            claimName: zookeeper-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
  namespace: kafka-elk
  labels:
    app: zookeeper
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 2181
      targetPort: 2181
  selector:
    app: zookeeper

